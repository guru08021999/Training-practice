package com.Aug29;

import java.util.Scanner;

public class DAOAssignment {
}
public class Assignment {
    public static void main(String[] args) {
        Company c = new Company();
        Scanner sc = new Scanner(System.in);
        boolean flag = false;
        while (true){
            System.out.println("1. Add Employee details");
            System.out.println("2. Display all Employee Details");
            System.out.println("4. Modify Employee Details by employee id");
            System.out.println("5. Delete Employee Details by employee id");
            System.out.println("6. Exit");
            int key = sc.nextInt();
            switch (key){


                    System.out.println("Enter employee id");
                    int empid = sc.nextInt();
                    System.out.println("Enter employee name");
                    String ename = sc.next();
                    System.out.println("Enter employee salary");
                    double salary = sc.nextDouble();
                    System.out.println("Enter employee department");
                    String departmentName = sc.next();
                    System.out.println("Enter employee manager");
                    String managerName = sc.next();
                    Employee e = new Employee(empid,ename,salary,departmentName,managerName);
                    c.addEmployeeDetails(e);
                    break;

                    c.displayAllEmployeeDetails();
                    break;
                
                    c.displayEmployeeDetailsById(sc.nextInt());
                    break;
                
                    System.out.println("Enter employee id");
                    empid = sc.nextInt();
                    System.out.println("Enter employee salary");
                    salary = sc.nextDouble();
                    System.out.println("Enter employee department");
                    departmentName = sc.next();
                    System.out.println("Enter employee manager");
                    managerName=sc.next();
                    Employee e1 = new Employee(empid,"",salary,departmentName,managerName);
                    c.modifyEmployeeDetails(e1);
                    break;
                
                    System.out.println("Enter employee id");
                    c.deleteEmployeeDetails(sc.nextInt());
                    break;
                default:
                    flag = true;

            }
            if(flag==true)
                break;
        }


    }
}



//Employee class

package com.Aug29;

import java.util.ArrayList;

class Employee {
    private int empid;
    private String ename;
    private double salary;
    private String departmentName;
    private String managerName;

    public Employee() {
    }

    public Employee(int empid, String ename, double salary, String departmentName, String managerName) {
        this.empid = empid;
        this.ename = ename;
        this.salary = salary;
        this.departmentName = departmentName;
        this.managerName = managerName;
    }

    public void setEmpid(int empid) {
        this.empid = empid;
    }

    public void setEname(String ename) {
        this.ename = ename;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }

    public void setDepartmentName(String departmentName) {
        this.departmentName = departmentName;
    }

    public void setManagerName(String managerName) {
        this.managerName = managerName;
    }

    public int getEmpid() {
        return empid;
    }

    public String getEname() {
        return ename;
    }

    public double getSalary() {
        return salary;
    }

    public String getDepartmentName() {
        return departmentName;
    }

    public String getManagerName() {
        return managerName;
    }
}


//DAO Employee

package com.Aug29;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;


public class EmployeeDAO {
    private static String url = "jdbc:mysql://localhost:3306/Guru1";

    public Employee getEmployeeByEmployeeId(int empid) {
        Employee emp = null;
        try (Connection con = DriverManager.getConnection(url, "root", "G@1nsight");
             PreparedStatement pst = con.prepareStatement("select * from employee where emp_no = ?")) {
            pst.setInt(1,empid);
            ResultSet rs = pst.executeQuery();
            if (rs.next())
                emp = new Employee(rs.getInt(1), rs.getString(2), rs.getDouble(3), rs.getString(4), rs.getString(5));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return emp;

    }

    public ArrayList<Employee> getAllEmployees() {
        ArrayList<Employee> elist = new ArrayList<>();
        try (Connection con = DriverManager.getConnection(url, "root", "G@1nsight");
             PreparedStatement pst = con.prepareStatement("select * from employee ")) {
            ResultSet rs = pst.executeQuery();
            while (rs.next())
                elist.add(new Employee(rs.getInt(1), rs.getString(2), rs.getDouble(3), rs.getString(4), rs.getString(5)));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return elist;

    }

    public boolean addEmployee(Employee emp) {
        int count = 0;
        try (Connection con = DriverManager.getConnection(url, "root", "G@1nsight");
             PreparedStatement pst = con.prepareStatement("insert into employee values (?,?,?,?,?)")) {
            pst.setInt(1, emp.getEmpid());
            pst.setString(2, emp.getEname());
            pst.setDouble(3, emp.getSalary());
            pst.setString(4, emp.getDepartmentName());
            pst.setString(5, emp.getManagerName());
            count = pst.executeUpdate();

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return count == 1;

    }

    public boolean modifyEmployee(Employee emp) {
        int count = 0;
        try (Connection con = DriverManager.getConnection(url, "root", "G@1nsight");
             PreparedStatement pst = con.prepareStatement("update employee set emp_sal = ? , department = ? ,manager_name = ? where emp_no = ? ")) {
            pst.setDouble(1, emp.getSalary());
            pst.setString(2, emp.getDepartmentName());
            pst.setString(3, emp.getManagerName());
            pst.setInt(4, emp.getEmpid());


            count = pst.executeUpdate();

        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return count == 1;
    }
    public boolean deleteEmployeeByEmployeeId(int empid) {
        int count = 0;
        try (Connection con = DriverManager.getConnection(url, "root", "G@1nsight");
             PreparedStatement pst = con.prepareStatement("delete from employee where emp_no = ?")) {
            pst.setInt(1,empid);
            count = pst.executeUpdate();
        } catch (Exception ex) {
            ex.printStackTrace();
        }

        return count == 1;
    }
}


